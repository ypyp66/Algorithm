dp = [1,2,4]

n = int(input())

for i in range(3,n):
    dp.append(((dp[i-3] % 123456)+(dp[i-2] % 123456)+(dp[i-1] % 123456)))
    
print(dp[-1] % 123456)


'''
이 문제는 dp문제의 기본적인 형태이다.

먼저 n을 입력받아 1,2,3의 덧셈으로 n을 만들 수 있는 경우의 수를 구해주면된다.

n=1일 때) 1 // 1개
n=2일 때) 1+1, 2 //2개
n=3일 때) 1+1+1, 1+2, 2+1, 3 //4개
n=4일 때) 1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 1+3, 3+1, 2+2 //7개
n=5일 때) 1+1+1+1+1, 1+1+1+2, 1+1+2+1, 1+2+1+1, 2+1+1+1, 
          1+1+3, 1+3+1, 3+1+1, 2+3, 3+2, 1+2+2, 2+1+2, 2+2+1 //13개

이렇게 n일 때의 경우의 수 = n-3 + n-2 + n-1 인 것을 알 수 있다.
따라서 기본적으로 dp라는 배열을 선언해 준 후 1,2,4는 기본값으로 초기화를 해준다.

n=3일때 부턴 for문을 이용해 i-3, i-2, i-1일때의 값을 다 더해주면된다.

하지만 문제에서 요구하는 것은 123,456이라는 값으로 나눈 나머지이므로
최종값에 [% 123456] 을 해줘도 되지만 '나머지 정리' 라는 것을 이용하면된다.

[ (a+b) % n == ( (a%n) + (b%n) ) % n ] 임을 이용하여 풀 수 있다.
          
'''